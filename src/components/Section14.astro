<!-- https://text-to-svg.com/ -->
<script>
  import { gsap } from '@/lib/gsap';
  import MotionPathPlugin from 'gsap/MotionPathPlugin';
  import DrawSVGPlugin from 'gsap/DrawSVGPlugin';

  gsap.registerPlugin(MotionPathPlugin, DrawSVGPlugin);

  let paths: SVGPathElement[] = splitPaths('#am-text-paradise-3');

  let duration = 5;
  let distance = 0;
  let tl = gsap.timeline({
    repeat: -1, // -1 = infinitas repeticiones
    repeatDelay: 1 // opcional, espera 1 segundo entre repeticiones
  });

  paths.forEach(segment => (distance += segment.getTotalLength()));

  paths.forEach(segment => {
    tl.from(segment, {
      drawSVG: 0,
      ease: 'none',
      duration: duration * (segment.getTotalLength() / distance)
    });
  });

  /**
   * Helper function that splits a <path> with multiple segments
   * into multiple <path> elements (split by "M" commands).
   */
  function splitPaths(selectorOrPath: string | SVGPathElement): SVGPathElement[] {
    const toSplit: SVGPathElement[] =
      typeof selectorOrPath === 'string'
        ? (gsap.utils.toArray(selectorOrPath) as SVGPathElement[])
        : [selectorOrPath];

    let newPaths: SVGPathElement[] = [];

    if (toSplit.length > 1) {
      toSplit.forEach(path => newPaths.push(...splitPaths(path)));
    } else {
      const path = toSplit[0];
      const rawPath: any[] = MotionPathPlugin.getRawPath(path); // GSAP devuelve array de segmentos
      const parent = path.parentNode as SVGElement;
      const attributes = Array.from(path.attributes);

      newPaths = rawPath.map(segment => {
        const newPath = document.createElementNS(
          'http://www.w3.org/2000/svg',
          'path'
        );

        // Copiar atributos originales
        for (const attr of attributes) {
          newPath.setAttributeNS(null, attr.nodeName, attr.nodeValue!);
        }

        // Generar atributo "d" basado en el segmento
        newPath.setAttributeNS(
          null,
          'd',
          'M' +
            segment[0] +
            ',' +
            segment[1] +
            'C' +
            segment.slice(2).join(',') +
            (segment.closed ? 'z' : '')
        );

        parent.insertBefore(newPath, path);
        return newPath;
      });

      parent.removeChild(path);
    }

    return newPaths;
  }
</script>

<section class='am-section'>
  <svg
    xmlns='http://www.w3.org/2000/svg'
    xml:space='preserve'
    width='1080'
    height='1080'
    viewBox='0 0 285.75 285.75'
    ><g style='display:inline;'
      ><path
        class='fill-outset-12'
        id='am-text-paradise-3'
        d='M194.112 154.408c-1.222-.022-2.717 1.186-3.495 1.758-3.895 2.868-7.122 6.562-10.226 10.227-5.567 6.57-11.402 12.837-16.764 19.61-2.38 3.007-4.614 7.74-7.802 9.911-1.873 1.276-4.291.65-6.327 1.582-5.453 2.5-10.057 6.33-15.814 8.33-2.115.734-6.707 3.173-7.802-.212-.812-2.51 3.37-6.44 4.006-8.856l-.632-.633-3.796 2.53h-.632c-2.72-3.337-8.521.027-11.387 1.898-8.727 5.697-17.17 11.904-26.57 16.342-2.048.968-4.327 1.162-6.325 2.004-1-3.451.861-4.95 2.952-7.591 4.367-5.517 11.208-9.726 14.76-15.815.592-1.015 1.435-2.59.95-3.796-.565-1.4-2.649-2.076-2.004-3.796 1.522-4.058 6.966-5.728 4.85-10.754-3.733.688-7.566 2.727-10.016 5.694-.693.838-1.493 1.993-1.265 3.163.371 1.91 2.579 2.384 1.16 4.428-1.265 1.82-3.435 2.983-5.061 4.428-5.039 4.479-10.735 8.463-17.08 10.754-1.931.698-7.997 3.453-8.752 0-.67-3.062 3.604-6.197 3.69-9.489-1.585.334-3.335 2.03-4.85 2.004-1.317-.023-2.486-.907-4.006-.738-2.966.33-5.914 2.453-8.224 4.217-1.54 1.176-5.157 4.034-3.479 6.431.97 1.386 3.5.624 4.745.105 4.374-1.822 7.953-5.344 12.019-7.59-3.819 6.045-.357 9.59 6.326 8.012 8.703-2.055 17.18-8.112 23.406-14.338 1.527-1.527 4.214-5.588 6.22-2.531 1.605 2.444-2.878 5.452-4.322 6.959-4.48 4.674-10.961 9.95-13.812 15.815-.282.581-.549 1.255-.632 1.897-.866 6.682 8.266 2.837 11.28 1.371 2.567-1.247 5.073-2.642 7.592-4.006 3.847-2.084 7.35-5.26 11.387-6.854.823 2.544 3.491 2.23 5.693 1.16 4.05-1.969 7.686-4.954 11.387-7.486-.511 1.389-1.476 2.9-1.582 4.429-.222 3.2 2.168 3.795 4.745 3.795 4.417 0 9.003-2.124 12.652-4.428-.77 2.66-.405 5.728 3.163 3.795 3.056-1.655 5.79-4.524 8.224-6.958-.366.771-1.002 1.678-1.16 2.53-.826 4.46 1.75 5.22 5.588 5.061 5.251-.219 9.824-3.32 14.55-5.06-1.717 4.076.03 6.32 4.428 5.588 5.464-.911 10.157-4.37 15.182-6.221 1.092 3.376 6.679 1.783 9.49 1.265-2.827 4.368-11.212 2.809-11.388 9.49 6.462 0 8.273-3.477 13.285-6.749 1.294-.844 2.974-1.011 4.428-1.476 3.625-1.158 7.602-2.864 11.387-3.163-1.465 5.06 1.008 7.782 6.326 6.748 6.034-1.173 16.217-3.88 19.61-9.278-2.135-.45-3.122.77-5.06 1.792-4.24 2.238-8.554 4.26-13.285 5.377-1.523.36-3.557.87-5.061.106-2.223-1.129-1.23-4.013.633-5.061 1.35-.76 9.6-.413 6.642-4.639-1.45-2.072-5.175.47-6.642 1.265-5.708 3.092-12.804 4.271-18.978 6.22-.439-3.726-6.815-1.335-9.489-1.265 1.521-3.853 5.05-5.756 8.856-6.958l-1.265 4.428c4.03-2.396 3.307-7.073-1.898-5.483-3.109.95-5.484 3.636-8.224 5.272-3.2 1.911-6.663 3.457-10.121 4.85-1.708.688-5.777 3.075-7.38 1.16-.823-.983.502-2.435 1.054-3.269 1.6-2.418 3.816-4.052 4.428-6.958-2.212.64-3.199 2.291-5.06 3.584-3.853 2.675-9.345 5.183-13.918 6.327-1.31.327-3.813 1.16-5.06.527-3.029-1.538-.192-5.353 1.897-6.01.119-4.497 4.643-7.174 7.591-10.122 7.702-7.701 15.155-15.679 22.774-23.405 2.69-2.729 5.299-5.708 7.486-8.857.66-.95 1.888-2.452 1.054-3.69-.335-.498-.772-.695-1.25-.704zm-.332 1.864-8.223 10.121-19.611 19.61 18.978-22.14zm-173.754 32.71c25.833-24.51 53.605-21.865 33.774 1.273-8.317 8.68-17.218 10.931-28.923 10.931l10.754-12.652 5.694-6.326-6.327 4.428-12.019 13.917s-9.705 10.46-7.59 15.815h1.264c1.166-4.028 2.995-10.695 6.96-13.073 2.355-1.414 7.317.123 10.12-.422 10.678-2.076 24.918-9.708 25.937-21.93.305-3.665 3.284-26.942-39.644 8.038zm81.395-9.937c-1.037 2.629-3.07 5.626-5.271 7.486-.986.833-2.674.923-3.269-.527-1.191-2.908 6.452-6.52 8.54-6.959zm80.34 12.652-2.695 2.604.797 1.192c1.51-.438 2.954-1.498 2.872-2.584-.034-.438-.384-.712-.974-1.212zm-29.1 6.959c-1.827 3.156-6.533 7.28-10.12 8.223.45-4.287 6.053-7.902 10.12-8.223zm74.015 0v.632l-3.163 1.265zm-170.097.271c.628.016 1.24.13 1.826.361v.633c-3.966 2.818-8.22 6.825-13.285 6.958 1.925-3.325 7.066-8.059 11.459-7.952zm64.656.108a5.068 5.068 0 0 1 1.695.253c-2.136 3.398-8.556 7.484-12.652 7.591 1.04-3.595 6.747-7.805 10.957-7.844zm77.183 9.338c-.761.517-1.41 1.358-3.423 2.489-2.012 1.13-3.015 2.152-3.523 1.386-.157-.805 4.936-3.299 6.028-3.691.404-.137 1.452-.546 1.452-.546z'
        transform='translate(13.137 -44.416)'></path><path
        class='fill-outset-12'
        id='am-text-paradise-3'
        d='M49.394 169.578c-3.958.216-8.098 1.718-12.055 3.712-7.912 3.989-15.305 9.847-17.077 12.752-.532.874-1.005 2.899-1.005 2.899l.856-.125s.561-.333 1.306-.987c2.69-2.364 9.631-8.315 17.147-12.103 3.758-1.894 7.614-3.242 10.977-3.426 3.362-.184 6.152.68 8.37 3.297 1.241 1.464 1.724 2.897 1.714 4.408-.01 1.512-.555 3.14-1.586 4.813-2.062 3.345-6.064 6.76-10.7 9.414-4.635 2.654-9.902 4.568-14.384 5.14-4.483.573-7.973 1.05-9.77-1.175-.055.222-.41-.54-.955-.999-.722-.606-1.513-1.24-1.513-1.24l-.242 1.754.694.942c2.54 3.313 7.168 4.058 12.131 3.423 4.965-.634 10.481-2.665 15.395-5.478 4.913-2.814 9.225-6.39 11.666-10.35 1.22-1.98 1.976-4.081 1.99-6.226.015-2.145-.755-4.296-2.36-6.19-2.786-3.288-6.64-4.472-10.599-4.256z'
        style='baseline-shift:baseline;display:inline;overflow:visible;opacity:.98;mix-blend-mode:normal;vector-effect:none;fill-opacity:1;stroke:#1a1a1a;stroke-width:.00010305;stroke-linejoin:round;stroke-opacity:.772549;enable-background:accumulate;stop-color:#000;stop-opacity:1'
        transform='translate(13.137 -44.416)'></path></g
    ></svg
  >
</section>

<style>
  .am-section {
    height: 100vh;
    position: relative;
    background: conic-gradient(from -90deg at 50% -25%, blue, blueviolet);
  }

  svg {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    width: 80%;
    height: 80%;
  }

  .group {
    display: inline;
    opacity: 1;
  }

  .path {
    fill: none;
    stroke-linejoin: round;
  }

  .fill-inner {
    stroke: #000;
    stroke-width: 1px;
  }

  .fill-outset-12 {
    fill: transparent;
    stroke: black;
    stroke-width: 0.3px;
  }
</style>
